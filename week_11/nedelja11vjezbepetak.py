# -*- coding: utf-8 -*-
"""Nedelja11VjezbePetak.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HtRKFBNdqPxzMPwhkchdT21zisYkH_Hw

Zadatak 1 i Zadatak 2, osim csv fajla - Objektno orjentisano programiranje
"""

class Color:
  def __init__(self,red,green,blue):
    self.__red = red
    self.__green = green
    self.__blue = blue

  def get_red(self):
    return self.__red
  
  def get_blue(self):
    return self.__blue

  def get_green(self):
    return self.__green

  def set_red(self, new_value):
    if new_value >= 0 and new_value<=255:
      self.__red = new_value
    else:
      print('Nije unjeta validna vrijednost za crvenu boju')

  def set_green(self,new_value):
    if new_value >= 0 and new_value <=255:
      self.__green = new_value
    else:
      print('Nije unjeta validna vrijednost za crvenu boju')

  def set_blue(self,new_value):
    if new_value >= 0 and new_value <=255:
      self.__blue = new_value
    else:
      print('Nije unjeta validna vrijednost za crvenu boju')


  def add_red(self,change):
    new_red = self.get_red() + change
    if new_red >= 0:
      self.set_red(new_red)
    else:
      print('Doslo je do ispadanja iz ospega')

  def add_green(self,change):
    new_green = self.get_green() + change
    if new_green>=0:
      self.set_green(new_green)
    else:
      print('Doslo je do ispadanja iz opsega')

  def add_blue(self,change):
    new_blue = self.get_blue() + change
    if new_blue >=0:
      self.set_blue(new_blue)
    else:
      print('Doslo je do ispadanja iz opsega')

  def __lt__(self,other):
    if self.__red < other.__red and self.__green < other.green and self.__blue<other.__blue:
      return True
    else:
      return False

  def __eq__(self,other):
    if self.__red == other.__red and self.__green == other.green and self.__blue == other.__blue:
      return True
    else:
      return False

  def __str__(self):
    return f'Red: {self.get_red()}, blue: {self.get_blue()} , green: {self.get_green()}'

boja1 = Color(100,150,200)
print(boja1)
boja1.add_blue(-100)
print(boja1)
boja1.add_red(50)
print(boja1)

boja2 = Color(100,150,200)
print(boja1<boja2)
print(boja1 == boja2)


class AlphaColor(Color):
  def __init__(self, red, green, blue, alpha):
    super().__init__(red, green, blue)
    self.__alpha = alpha

  def get_alpha(self):
    return self.__alpha

  def set_alpha(self, alpha):
    if alpha >= 0 and alpha <= 1:
      self.__alpha = alpha
    else:
      print("Alpha moze imati vrijednost u opsegu 0 - 1!")

  def update_color_by_alpha(self, alpha):
    self.set_red(self.get_red() - self.get_red() * alpha)
    self.set_green(self.get_green() - self.get_green() * alpha)
    self.set_blue(self.get_blue() - self.get_blue() * alpha)

  def __str__(self):
    return f'Red: {self.get_red()}, blue: {self.get_blue()} , green: {self.get_green()}, alpha: {self.get_alpha()}'


a1 = AlphaColor(10, 20, 30, 1)
print(a1)
a1.update_color_by_alpha(0.5)
print(a1)

"""Zadatak 3 - Objektno orjentisano programiranje"""

class Televizor:
    def __init__(self):
        self.__broj_tekuceg_kanala = 0
        self.__naziv_tekuceg_kanala = ""
        self.__kanali = []
        self.__jacina_tona = 0

    def get_broj_tekuceg_kanala(self):
        return self.__broj_tekuceg_kanala

    def set_broj_tekuceg_kanala(self, broj):
        if 0 <= broj < len(self.__kanali):
            self.__broj_tekuceg_kanala = broj
            self.__naziv_tekuceg_kanala = self.__kanali[broj]
        else:
            print("Nevalidan broj kanala.")

    def get_naziv_tekuceg_kanala(self):
        return self.__naziv_tekuceg_kanala

    def get_kanali(self):
        return self.__kanali

    def get_jacina_tona(self):
        return self.__jacina_tona

    def set_jacina_tona(self, jacina):
        if 0 <= jacina <= 10:
            self.__jacina_tona = jacina
        else:
            print("Nevalidna jačina tona. Mora biti između 0 i 10.")

    def dodaj_kanal(self, naziv_kanala):
        self.__kanali.append(naziv_kanala)

    def obrisi_kanal(self, naziv_kanala):
        if naziv_kanala in self.__kanali:
            self.__kanali.remove(naziv_kanala)
            if self.__naziv_tekuceg_kanala == naziv_kanala:
                self.__broj_tekuceg_kanala = 0
                self.__naziv_tekuceg_kanala = ""
        else:
            print("Kanal nije pronađen.")

    def pojacaj_ton(self):
        self.set_jacina_tona(self.__jacina_tona + 1)

    def ime_kanala(self, broj_kanala):
        if 1 <= broj_kanala <= len(self.__kanali):
            return self.__kanali[broj_kanala - 1]
        else:
            return "Nevalidan broj kanala."
tv = Televizor()

tv.dodaj_kanal("Kanal 1")
tv.dodaj_kanal("Kanal 2")
tv.dodaj_kanal("Kanal 3")
print(tv.get_kanali()) 

tv.obrisi_kanal("Kanal 2")
print(tv.get_kanali()) 
tv.set_broj_tekuceg_kanala(1)
print(tv.get_naziv_tekuceg_kanala()) 
tv.set_jacina_tona(5)